import random
Jyanken_list = ["グー", "チョキ", "パー"]

#親クラスのJyaiken_Playerを作成、名前のみ初期値必要の為、記述
class Jyaiken_Player:
    def __init__(self, name):
        self.player_name = name
        self.win_ratio = 0
        self.signature = None

#子クラスとしてコンピューターのグー・チョキ・パーを指定
class Computer_Hands(Jyaiken_Player):
    def Jyaken_Hands_Computer(self):
        self.signature = random.choice(Jyanken_list)

#子クラスとしてプレイヤーのグー・チョキ・パーを入力してもらう
class Player_Hands(Jyaiken_Player):
    def Jyanken_Hands_Player(self):
        self.signature = input(self.player_name + "さん、グー・チョキ・パーのいずれかを入力してください： ")

#コンピューターの人数の定義
com_num = input("コンピューターの人数を決めてください： ")
com = [Computer_Hands("com1"), Computer_Hands("com2")]

#ユーザーの実体化
ryota = Player_Hands("坂本")

while ryota.win_ratio < 3:
    print("三回勝負のじゃんけんをしましょう")


while True:
    ryota.Jyanken_Hands_Player()

    if (ryota.signature == yamao.signature):
        print("あいこです。もう一度。")
        continue
    else:
        if (ryota.signature == "チョキ") and (yamao.signature == "グー"):
            print("じゃんけんプログラムはグーなので、あなたの負けです。")
        elif (ryota.signature == "パー") and (yamao.signature == "グー"):
            print("じゃんけんプログラムはグーなので、あなたの勝ちです。")
        # プログラムがチョキの時
        elif (ryota.signature == "グー") and (yamao.signature == "チョキ"):
            print("じゃんけんプログラムはチョキなので、あなたの勝ちです")
        elif (ryota.signature == "パー") and (yamao.signature == "チョキ"):
            print("じゃんけんプログラムはチョキなので、あなたの負けです")
        # プログラムがパーの時
        elif (ryota.signature == "グー") and (yamao.signature == "パー"):
            print("じゃんけんプログラムはパーなので、あなたの負けです")
        elif (ryota.signature == "チョキ") and (yamao.signature == "パー"):
            print("じゃんけんプログラムはパーなので、あなたの勝ちです")
        else:
            print("グー・チョキ・パーのいずれかをカタカナで指定してください")
        break
